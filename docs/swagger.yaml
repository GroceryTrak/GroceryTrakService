definitions:
  templates.BadRequestResponse:
    properties:
      error:
        example: Invalid request data
        type: string
    type: object
  templates.ConflictResponse:
    properties:
      error:
        example: User already exists
        type: string
    type: object
  templates.ErrorResponse:
    properties:
      error:
        example: An error occurred
        type: string
    type: object
  templates.ForbiddenResponse:
    properties:
      error:
        example: Access denied
        type: string
    type: object
  templates.InternalServerErrorResponse:
    properties:
      error:
        example: Internal server error
        type: string
    type: object
  templates.ItemRequest:
    properties:
      description:
        example: Organic whole milk
        type: string
      name:
        example: Milk
        type: string
    type: object
  templates.ItemResponse:
    properties:
      description:
        example: Organic whole milk
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Milk
        type: string
    type: object
  templates.ItemsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/templates.ItemResponse'
        type: array
    type: object
  templates.LoginRequest:
    properties:
      password:
        example: securepassword123
        type: string
      username:
        example: john_doe
        type: string
    type: object
  templates.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR...
        type: string
    type: object
  templates.NotFoundResponse:
    properties:
      error:
        example: Resource not found
        type: string
    type: object
  templates.RegisterRequest:
    properties:
      password:
        example: securepassword123
        type: string
      username:
        example: john_doe
        type: string
    type: object
  templates.UnauthorizedResponse:
    properties:
      error:
        example: Invalid credentials
        type: string
    type: object
info:
  contact:
    email: grocerytrak@gmail.com
    name: GroceryTrak
  description: This is the API documentation for GroceryTrak.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: GroceryTrak API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user and returns a JWT token
      parameters:
      - description: User Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/templates.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/templates.LoginResponse'
        default:
          description: Standard Error Responses
          schema:
            $ref: '#/definitions/templates.ErrorResponse'
      summary: Logs in a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: User Registration Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/templates.RegisterRequest'
      produces:
      - application/json
      responses:
        default:
          description: Standard Error Responses
          schema:
            $ref: '#/definitions/templates.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /item:
    post:
      consumes:
      - application/json
      description: Add a new item to the database
      parameters:
      - description: New Item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/templates.ItemRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/templates.ItemResponse'
        default:
          description: Standard Error Responses
          schema:
            $ref: '#/definitions/templates.ErrorResponse'
      summary: Create an item
      tags:
      - item
  /item/{id}:
    delete:
      consumes:
      - application/json
      description: Remove an item by its ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        default:
          description: Standard Error Responses
          schema:
            $ref: '#/definitions/templates.ErrorResponse'
      summary: Delete an item
      tags:
      - item
    get:
      consumes:
      - application/json
      description: Get an item by its ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/templates.ItemResponse'
        default:
          description: Standard Error Responses
          schema:
            $ref: '#/definitions/templates.ErrorResponse'
      summary: Get an item
      tags:
      - item
    put:
      consumes:
      - application/json
      description: Update an existing item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Item Data
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/templates.ItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/templates.ItemResponse'
        default:
          description: Standard Error Responses
          schema:
            $ref: '#/definitions/templates.ErrorResponse'
      summary: Update an item
      tags:
      - item
  /item/search:
    get:
      consumes:
      - application/json
      description: Searches for items that match the provided keyword in their name
        or description
      parameters:
      - description: Search keyword
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/templates.ItemsResponse'
        default:
          description: Standard Error Responses
          schema:
            $ref: '#/definitions/templates.ErrorResponse'
      summary: Search items
      tags:
      - item
swagger: "2.0"
