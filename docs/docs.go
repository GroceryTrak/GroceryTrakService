// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "GroceryTrak",
            "email": "grocerytrak@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/confirm": {
            "post": {
                "description": "Confirms a user's email using the OTP code sent to their email during sign-up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Confirms a user's email",
                "parameters": [
                    {
                        "description": "OTP Confirmation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ConfirmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ConfirmResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Logs in a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logs in a user",
                "parameters": [
                    {
                        "description": "User Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Creates a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Registration Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.RegisterResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/resend": {
            "post": {
                "description": "Resends the email confirmation code in case the user did not receive it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Resends the confirmation code to the user's email",
                "parameters": [
                    {
                        "description": "Resend Code Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ResendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ResendResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/image": {
            "get": {
                "description": "Proxy an image from a given URL",
                "produces": [
                    "image/*"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Proxy an image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image URL",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/item": {
            "post": {
                "description": "Add a new item to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Create an item",
                "parameters": [
                    {
                        "description": "New Item",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.ItemResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/item/search": {
            "get": {
                "description": "Searches for items that match the provided keyword in their name or description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Search items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ItemsResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/item/{id}": {
            "get": {
                "description": "Get an item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Get an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ItemResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing item by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Update an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Item Data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ItemResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Delete an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/recipe": {
            "post": {
                "description": "Creates a new recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe"
                ],
                "summary": "Create a recipe",
                "parameters": [
                    {
                        "description": "Recipe Data",
                        "name": "recipe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RecipeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.RecipeResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/recipe/search": {
            "get": {
                "description": "Searches for recipes by title, ingredients, or diet type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe"
                ],
                "summary": "Search recipes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of recipe",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated ingredient IDs",
                        "name": "ingredients",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Diet type",
                        "name": "diet",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.RecipesResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/recipe/{id}": {
            "get": {
                "description": "Retrieves a recipe by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe"
                ],
                "summary": "Get a recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.RecipeResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing recipe by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe"
                ],
                "summary": "Update a recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Recipe Data",
                        "name": "recipe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RecipeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.RecipeResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a recipe by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipe"
                ],
                "summary": "Delete a recipe",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user_item": {
            "get": {
                "description": "Get all items for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_item"
                ],
                "summary": "Get all user's items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserItemsResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new item for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_item"
                ],
                "summary": "Create a new user_item for the authenticated user",
                "parameters": [
                    {
                        "description": "Create User Item",
                        "name": "userItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserItemResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user_item/detect": {
            "post": {
                "description": "Detect items from an uploaded image for the authenticated user using OpenAI's vision model",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_item"
                ],
                "summary": "Detect items from an uploaded image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.UserItemsResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user_item/predict": {
            "post": {
                "description": "Predict items from an uploaded image for the authenticated user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_item"
                ],
                "summary": "Predict items from an uploaded image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserItemsResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user_item/search": {
            "get": {
                "description": "Searches for user items by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_item"
                ],
                "summary": "Search user items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of user item",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserItemsResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user_item/{item_id}": {
            "get": {
                "description": "Get a specific item for the authenticated user by item ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_item"
                ],
                "summary": "Get a user's item by ItemID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserItemResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user_item for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_item"
                ],
                "summary": "Update a user_item for the authenticated user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User Item",
                        "name": "userItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserItemResponse"
                        }
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user_item for the authenticated user",
                "tags": [
                    "user_item"
                ],
                "summary": "Delete a user_item for the authenticated user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Standard Error Responses",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.BadRequestResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request data"
                }
            }
        },
        "dtos.ConfirmRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "abc@gmail.com"
                }
            }
        },
        "dtos.ConfirmResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User confirmed successfully."
                }
            }
        },
        "dtos.ConflictResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "User already exists"
                }
            }
        },
        "dtos.DietCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "vegan": {
                    "type": "boolean"
                },
                "vegetarian": {
                    "type": "boolean"
                }
            }
        },
        "dtos.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "An error occurred"
                }
            }
        },
        "dtos.ForbiddenResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Access denied"
                }
            }
        },
        "dtos.InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "dtos.ItemNutrientRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 200
                },
                "name": {
                    "type": "string",
                    "example": "Calories"
                },
                "percentOfDailyNeeds": {
                    "type": "number",
                    "example": 100
                },
                "unit": {
                    "type": "string",
                    "example": "kcal"
                }
            }
        },
        "dtos.ItemNutrientResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 200
                },
                "name": {
                    "type": "string",
                    "example": "Calories"
                },
                "percentOfDailyNeeds": {
                    "type": "number",
                    "example": 100
                },
                "unit": {
                    "type": "string",
                    "example": "kcal"
                }
            }
        },
        "dtos.ItemRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image": {
                    "type": "string",
                    "example": "milk.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "Milk"
                },
                "nutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ItemNutrientRequest"
                    }
                },
                "spoonacular_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.ItemResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image": {
                    "type": "string",
                    "example": "milk.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "Milk"
                },
                "nutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ItemNutrientResponse"
                    }
                },
                "spoonacular_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.ItemsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ItemResponse"
                    }
                }
            }
        },
        "dtos.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "Password@123"
                },
                "username": {
                    "type": "string",
                    "example": "abc@gmail.com"
                }
            }
        },
        "dtos.LoginResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR..."
                },
                "expiresIn": {
                    "type": "integer",
                    "example": 3600
                },
                "idToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR..."
                },
                "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR..."
                },
                "tokenType": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "dtos.NotFoundResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Resource not found"
                }
            }
        },
        "dtos.RecipeInstructionRequest": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "example": 1
                },
                "step": {
                    "type": "string",
                    "example": "Bring a large pot of salted water to boil"
                }
            }
        },
        "dtos.RecipeInstructionResponse": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "example": 1
                },
                "step": {
                    "type": "string",
                    "example": "Bring a large pot of salted water to boil"
                }
            }
        },
        "dtos.RecipeItemRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 2.5
                },
                "item_id": {
                    "type": "integer",
                    "example": 456
                },
                "unit": {
                    "type": "string",
                    "example": "cups"
                }
            }
        },
        "dtos.RecipeItemResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 2.5
                },
                "item": {
                    "$ref": "#/definitions/dtos.ItemResponse"
                },
                "unit": {
                    "type": "string",
                    "example": "cups"
                }
            }
        },
        "dtos.RecipeNutrientRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 200
                },
                "name": {
                    "type": "string",
                    "example": "Calories"
                },
                "percentOfDailyNeeds": {
                    "type": "number",
                    "example": 100
                },
                "unit": {
                    "type": "string",
                    "example": "kcal"
                }
            }
        },
        "dtos.RecipeNutrientResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 200
                },
                "name": {
                    "type": "string",
                    "example": "Calories"
                },
                "percentOfDailyNeeds": {
                    "type": "number",
                    "example": 100
                },
                "unit": {
                    "type": "string",
                    "example": "kcal"
                }
            }
        },
        "dtos.RecipeRequest": {
            "type": "object",
            "properties": {
                "cooking_time": {
                    "type": "integer",
                    "example": 20
                },
                "image": {
                    "type": "string",
                    "example": "https://example.com/spaghetti.jpg"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.RecipeItemRequest"
                    }
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.RecipeInstructionRequest"
                    }
                },
                "kcal": {
                    "type": "number",
                    "example": 450.5
                },
                "nutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.RecipeNutrientRequest"
                    }
                },
                "prep_time": {
                    "type": "integer",
                    "example": 10
                },
                "ready_time": {
                    "type": "integer",
                    "example": 30
                },
                "servings": {
                    "type": "number",
                    "example": 4
                },
                "spoonacular_id": {
                    "type": "integer",
                    "example": 12345
                },
                "summary": {
                    "type": "string",
                    "example": "A classic Italian pasta dish with eggs, cheese, pancetta, and black pepper."
                },
                "title": {
                    "type": "string",
                    "example": "Spaghetti Carbonara"
                },
                "vegan": {
                    "type": "boolean",
                    "example": false
                },
                "vegetarian": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "dtos.RecipeResponse": {
            "type": "object",
            "properties": {
                "cooking_time": {
                    "type": "integer",
                    "example": 20
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image": {
                    "type": "string",
                    "example": "https://example.com/spaghetti.jpg"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.RecipeItemResponse"
                    }
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.RecipeInstructionResponse"
                    }
                },
                "kcal": {
                    "type": "number",
                    "example": 450.5
                },
                "nutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.RecipeNutrientResponse"
                    }
                },
                "prep_time": {
                    "type": "integer",
                    "example": 10
                },
                "ready_time": {
                    "type": "integer",
                    "example": 30
                },
                "servings": {
                    "type": "number",
                    "example": 4
                },
                "spoonacular_id": {
                    "type": "integer",
                    "example": 12345
                },
                "summary": {
                    "type": "string",
                    "example": "A classic Italian pasta dish with eggs, cheese, pancetta, and black pepper."
                },
                "title": {
                    "type": "string",
                    "example": "Spaghetti Carbonara"
                },
                "vegan": {
                    "type": "boolean",
                    "example": false
                },
                "vegetarian": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "dtos.RecipesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "diet_counts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.DietCount"
                    }
                },
                "recipes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.RecipeResponse"
                    }
                }
            }
        },
        "dtos.RegisterRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "Password@123"
                },
                "username": {
                    "type": "string",
                    "example": "abc@gmail.com"
                }
            }
        },
        "dtos.RegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User registered successfully."
                }
            }
        },
        "dtos.ResendRequest": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "example": "abc@gmail.com"
                }
            }
        },
        "dtos.ResendResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Confirmation code resent successfully."
                }
            }
        },
        "dtos.UnauthorizedResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid credentials"
                }
            }
        },
        "dtos.UserItemRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 2
                },
                "item_id": {
                    "type": "integer",
                    "example": 456
                },
                "unit": {
                    "type": "string",
                    "example": "kg"
                }
            }
        },
        "dtos.UserItemResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 2
                },
                "item": {
                    "$ref": "#/definitions/dtos.ItemResponse"
                },
                "unit": {
                    "type": "string",
                    "example": "kg"
                }
            }
        },
        "dtos.UserItemsResponse": {
            "type": "object",
            "properties": {
                "user_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.UserItemResponse"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "GroceryTrak API",
	Description:      "This is the API documentation for GroceryTrak.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
